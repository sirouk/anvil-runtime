version: '3.8'

services:
  # PostgreSQL database for Anvil data tables
  postgres:
    image: postgres:15-alpine
    container_name: anvil-test-postgres
    environment:
      POSTGRES_DB: anvil_test
      POSTGRES_USER: anvil_user
      POSTGRES_PASSWORD: anvil_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U anvil_user -d anvil_test" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - anvil-test-network

  # Main test container
  anvil-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: anvil-test-runner
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database connection
      DATABASE_URL: "postgresql://anvil_user:anvil_password@postgres:5432/anvil_test"
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: anvil_test
      PGUSER: anvil_user
      PGPASSWORD: anvil_password

      # Anvil configuration
      ANVIL_SERVER_URL: localhost
      ANVIL_SERVER_PORT: 3030
      NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:3001
      NEXT_PUBLIC_ANVIL_SERVER_URL: http://localhost:3030

      # Test configuration
      NODE_ENV: test
      CI: true
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 0

      # Disable default webServer since test manages its own
      PLAYWRIGHT_DISABLE_WEB_SERVER: 1
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3030:3030"
    volumes:
      # Mount test artifacts to host
      - ./test-results:/app/test-results
      # Mount source for development
      - ./src:/app/src
      - ./tests:/app/tests
      - ./tools:/app/tools
    networks:
      - anvil-test-network
    command: >
      sh -c "
        echo 'ðŸš€ Starting containerized Todo Demo Workflow Test...' &&
        echo 'ðŸ“‹ Waiting for PostgreSQL to be ready...' &&
        until pg_isready -h postgres -U anvil_user; do sleep 1; done &&
        echo 'âœ… PostgreSQL is ready' &&
        echo 'ðŸ§ª Running Todo Demo Test...' &&
        npm run test:e2e:todo:docker
      "

volumes:
  postgres_data:
    driver: local

networks:
  anvil-test-network:
    driver: bridge
